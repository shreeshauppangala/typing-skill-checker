{"ast":null,"code":"var _jsxFileName = \"/workspaces/typing-skill-checker/src/Stopwatch/ControlButtons/ControlButtons.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ControlButtons.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ControlButtons = props => {\n  _s();\n\n  const {\n    numberOfWords,\n    handlePauseResume,\n    active,\n    handleStart,\n    setWords,\n    isPaused\n  } = props;\n  const [buttonState, setButtonState] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"buttons\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Number Of Words Written = \", numberOfWords]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      children: active ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: handlePauseResume,\n        children: isPaused ? \"Resume\" : \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 48\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: () => {\n          handleStart();\n          setButtonState(!buttonState);\n        },\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"input\",\n      onChange: event => setWords(event.target.value),\n      disabled: buttonState || isPaused,\n      onPaste: e => {\n        e.preventDefault();\n        alert('Paste Is Not Allowed');\n      },\n      type: \"text\",\n      placeholder: \"Type The Text Here\",\n      rows: \"11\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ControlButtons, \"u/ctRVhI2jmgvc98qYY8ktIcpJU=\");\n\n_c = ControlButtons;\nexport default ControlButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlButtons\");","map":{"version":3,"sources":["/workspaces/typing-skill-checker/src/Stopwatch/ControlButtons/ControlButtons.js"],"names":["React","useState","ControlButtons","props","numberOfWords","handlePauseResume","active","handleStart","setWords","isPaused","buttonState","setButtonState","event","target","value","e","preventDefault","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,sBAAP;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAE9B,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,iBAAjB;AAAoCC,IAAAA,MAApC;AAA4CC,IAAAA,WAA5C;AAAyDC,IAAAA,QAAzD;AAAmEC,IAAAA;AAAnE,MAAgFN,KAAtF;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,IAAD,CAA9C;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAA,+CAA+BG,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBAA0BE,MAAM,gBAAG;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,OAAO,EAAGD,iBAA/B;AAAA,kBAC7BI,QAAQ,GAAG,QAAH,GAAc;AADO;AAAA;AAAA;AAAA;AAAA,cAAH,gBAEvB;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,OAAO,EAAG,MAAM;AAC1CF,UAAAA,WAAW;AACXI,UAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACH,SAHQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFT;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQI;AAAU,MAAA,SAAS,EAAC,OAApB;AACI,MAAA,QAAQ,EAAGE,KAAK,IAAIJ,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CADhC;AAEI,MAAA,QAAQ,EAAGJ,WAAW,IAAID,QAF9B;AAGI,MAAA,OAAO,EAAIM,CAAD,IAAO;AACbA,QAAAA,CAAC,CAACC,cAAF;AACAC,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACH,OANL;AAOI,MAAA,IAAI,EAAC,MAPT;AAQI,MAAA,WAAW,EAAC,oBARhB;AASI,MAAA,IAAI,EAAC;AATT;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA3BD;;GAAMf,c;;KAAAA,c;AA6BN,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./ControlButtons.css\";\n\nconst ControlButtons = (props) => {\n\n    const { numberOfWords, handlePauseResume, active, handleStart, setWords, isPaused } = props\n    const [buttonState, setButtonState] = useState(true)\n\n    return (\n        <div className='buttons'>\n            <h1>Number Of Words Written = {numberOfWords }</h1>\n            <div className='button'>{ active ? <div className=\"btn\" onClick={ handlePauseResume }>\n                { isPaused ? \"Resume\" : \"Pause\" }\n            </div> : <div className=\"btn\" onClick={ () => {\n                handleStart()\n                setButtonState(!buttonState)\n            } }>Start</div> }</div>\n            <textarea className='input'\n                onChange={ event => setWords(event.target.value) }\n                disabled={ buttonState || isPaused }\n                onPaste={ (e) => {\n                    e.preventDefault();\n                    alert('Paste Is Not Allowed')\n                } }\n                type=\"text\"\n                placeholder=\"Type The Text Here\"\n                rows='11'\n            />\n        </div>\n    );\n}\n\nexport default ControlButtons"]},"metadata":{},"sourceType":"module"}