{"ast":null,"code":"var _jsxFileName = \"/home/pacewisdom/workspace/React/typing-skill-checker/src/Stopwatch/ControlButtons/ControlButtons.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ControlButtons.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ControlButtons = props => {\n  _s();\n\n  const [buttonState, setButtonState] = useState(true);\n  const [words, setWords] = useState('');\n  const numberOfWords = words.split(/[ .:;?!~,`\"&|]+/).length;\n\n  const onChange = word => {// setWords(word)\n    // props.onChange(word)\n  };\n\n  const handleStart = () => {\n    props.handleStart();\n    setButtonState(!buttonState);\n  };\n\n  const StartButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"btn\",\n    onClick: handleStart,\n    children: \"Start\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n\n  const PauseButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"btn\",\n    onClick: props.handlePauseResume,\n    children: props.isPaused ? \"Resume\" : \"Pause\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n\n  const handleChange = e => {\n    e.preventDefault();\n    alert('Paste Is Not Allowed');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"buttons\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: numberOfWords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      children: props.active ? PauseButton : StartButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"input\",\n      onChange: event => setWords(event.target.value),\n      disabled: buttonState || props.isPaused,\n      onPaste: handleChange,\n      type: \"text\",\n      placeholder: \"Type The Text Here\",\n      rows: \"16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ControlButtons, \"qtSBaQIfxEz2RaxULR46g0/sIIg=\");\n\n_c = ControlButtons;\nexport default ControlButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlButtons\");","map":{"version":3,"sources":["/home/pacewisdom/workspace/React/typing-skill-checker/src/Stopwatch/ControlButtons/ControlButtons.js"],"names":["React","useState","ControlButtons","props","buttonState","setButtonState","words","setWords","numberOfWords","split","length","onChange","word","handleStart","StartButton","PauseButton","handlePauseResume","isPaused","handleChange","e","preventDefault","alert","active","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,sBAAP;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAE9B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMO,aAAa,GAAGF,KAAK,CAACG,KAAN,CAAY,iBAAZ,EAA+BC,MAArD;;AAEA,QAAMC,QAAQ,GAAIC,IAAD,IAAU,CACvB;AACA;AAEH,GAJD;;AAMA,QAAMC,WAAW,GAAG,MAAM;AACtBV,IAAAA,KAAK,CAACU,WAAN;AACAR,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACH,GAHD;;AAKA,QAAMU,WAAW,gBACb;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,OAAO,EAAED,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAIA,QAAME,WAAW,gBACb;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,OAAO,EAAEZ,KAAK,CAACa,iBAApC;AAAA,cACKb,KAAK,CAACc,QAAN,GAAiB,QAAjB,GAA4B;AADjC;AAAA;AAAA;AAAA;AAAA,UADJ;;AAMA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,KAAK,CAAC,sBAAD,CAAL;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAA,gBAAKb;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBAAyBL,KAAK,CAACmB,MAAN,GAAeP,WAAf,GAA6BD;AAAtD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAU,MAAA,SAAS,EAAC,OAApB;AACI,MAAA,QAAQ,EAAES,KAAK,IAAIhB,QAAQ,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAD/B;AAEI,MAAA,QAAQ,EAAErB,WAAW,IAAID,KAAK,CAACc,QAFnC;AAGI,MAAA,OAAO,EAAEC,YAHb;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,WAAW,EAAC,oBALhB;AAMI,MAAA,IAAI,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA/CD;;GAAMhB,c;;KAAAA,c;AAiDN,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./ControlButtons.css\";\n\nconst ControlButtons = (props) => {\n\n    const [buttonState, setButtonState] = useState(true)\n    const [words, setWords] = useState('')\n\n    const numberOfWords = words.split(/[ .:;?!~,`\"&|]+/).length;\n\n    const onChange = (word) => {\n        // setWords(word)\n        // props.onChange(word)\n\n    }\n\n    const handleStart = () => {\n        props.handleStart()\n        setButtonState(!buttonState)\n    }\n\n    const StartButton = (\n        <div className=\"btn\" onClick={handleStart}>Start</div>\n    );\n\n    const PauseButton = (\n        <div className=\"btn\" onClick={props.handlePauseResume}>\n            {props.isPaused ? \"Resume\" : \"Pause\"}\n        </div>\n    )\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        alert('Paste Is Not Allowed')\n    };\n\n    return (\n        <div className='buttons'>\n            <h1>{numberOfWords}</h1>\n            <div className='button'>{props.active ? PauseButton : StartButton}</div>\n            <textarea className='input'\n                onChange={event => setWords(event.target.value)}\n                disabled={buttonState || props.isPaused}\n                onPaste={handleChange}\n                type=\"text\"\n                placeholder=\"Type The Text Here\"\n                rows='16'\n            />\n        </div>\n    );\n}\n\nexport default ControlButtons"]},"metadata":{},"sourceType":"module"}