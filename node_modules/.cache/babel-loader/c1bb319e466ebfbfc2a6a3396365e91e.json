{"ast":null,"code":"var _jsxFileName = \"/workspaces/typing-skill-checker/src/Stopwatch/ControlButtons/ControlButtons.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ControlButtons.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ControlButtons = props => {\n  _s();\n\n  const [buttonState, setButtonState] = useState(true);\n\n  const handleStart = () => {\n    props.handleStart();\n    setButtonState(!buttonState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"buttons\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Number Of Words Written = \", props.numberOfWords]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      children: props.active ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: props.handlePauseResume,\n        children: props.isPaused ? \"Resume\" : \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 54\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: handleStart,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"input\",\n      onChange: event => props.setWords(event.target.value),\n      disabled: buttonState || props.isPaused,\n      onPaste: e => {\n        e.preventDefault();\n        alert('Paste Is Not Allowed');\n      },\n      type: \"text\",\n      placeholder: \"Type The Text Here\",\n      rows: \"11\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ControlButtons, \"u/ctRVhI2jmgvc98qYY8ktIcpJU=\");\n\n_c = ControlButtons;\nexport default ControlButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlButtons\");","map":{"version":3,"sources":["/workspaces/typing-skill-checker/src/Stopwatch/ControlButtons/ControlButtons.js"],"names":["React","useState","ControlButtons","props","buttonState","setButtonState","handleStart","numberOfWords","active","handlePauseResume","isPaused","event","setWords","target","value","e","preventDefault","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,sBAAP;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAE9B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,IAAD,CAA9C;;AAEA,QAAMK,WAAW,GAAG,MAAM;AACtBH,IAAAA,KAAK,CAACG,WAAN;AACAD,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACH,GAHD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAA,+CAAgCD,KAAK,CAACI,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBAA0BJ,KAAK,CAACK,MAAN,gBAAe;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,OAAO,EAAGL,KAAK,CAACM,iBAArC;AAAA,kBACnCN,KAAK,CAACO,QAAN,GAAiB,QAAjB,GAA4B;AADO;AAAA;AAAA;AAAA;AAAA,cAAf,gBAEjB;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,OAAO,EAAGJ,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFT;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAU,MAAA,SAAS,EAAC,OAApB;AACI,MAAA,QAAQ,EAAGK,KAAK,IAAIR,KAAK,CAACS,QAAN,CAAeD,KAAK,CAACE,MAAN,CAAaC,KAA5B,CADxB;AAEI,MAAA,QAAQ,EAAEV,WAAW,IAAID,KAAK,CAACO,QAFnC;AAGI,MAAA,OAAO,EAAIK,CAAD,IAAO;AACbA,QAAAA,CAAC,CAACC,cAAF;AACAC,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACH,OANL;AAOI,MAAA,IAAI,EAAC,MAPT;AAQI,MAAA,WAAW,EAAC,oBARhB;AASI,MAAA,IAAI,EAAC;AATT;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA7BD;;GAAMf,c;;KAAAA,c;AA+BN,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./ControlButtons.css\";\n\nconst ControlButtons = (props) => {\n\n    const [buttonState, setButtonState] = useState(true)\n\n    const handleStart = () => {\n        props.handleStart()\n        setButtonState(!buttonState)\n    }\n\n\n    return (\n        <div className='buttons'>\n            <h1>Number Of Words Written = { props.numberOfWords}</h1>\n            <div className='button'>{ props.active ? <div className=\"btn\" onClick={ props.handlePauseResume }>\n                { props.isPaused ? \"Resume\" : \"Pause\" }\n            </div> : <div className=\"btn\" onClick={ handleStart }>Start</div> }</div>\n            <textarea className='input'\n                onChange={ event => props.setWords(event.target.value)}\n                disabled={buttonState || props.isPaused}\n                onPaste={ (e) => {\n                    e.preventDefault();\n                    alert('Paste Is Not Allowed')\n                }}\n                type=\"text\"\n                placeholder=\"Type The Text Here\"\n                rows='11'\n            />\n        </div>\n    );\n}\n\nexport default ControlButtons"]},"metadata":{},"sourceType":"module"}